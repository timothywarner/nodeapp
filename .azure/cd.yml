trigger: none  # Keeps manual trigger option

# Add trigger for CI pipeline completion
resources:
  pipelines:
  - pipeline: nodeci
    source: node-simple-ci
    trigger: true    # Triggers when CI pipeline completes successfully

variables:
- group: nodeapp-cd-variables

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Infrastructure
  jobs:
  - job: DeployInfrastructure
    steps:
    - download: nodeci   # Download artifacts from the CI pipeline
      artifact: drop
    
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'Azure Pass Azure Subscription'
        subscriptionId: '$(subscriptionId)'
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(resourceGroup)'
        location: '$(location)'
        templateLocation: 'Linked artifact'
        csmFile: '$(System.DefaultWorkingDirectory)/azuredeploy.json'
        overrideParameters: '-site_host_name "$(webAppName)" -app_svc_plan_name "$(webAppName)-plan"'
        deploymentMode: 'Incremental'

- stage: Staging
  dependsOn: Infrastructure
  jobs:
  - job: DeployStaging
    steps:
    - task: AzureWebApp@1
      inputs:
        azureSubscription: 'Azure Pass Azure Subscription'
        appName: '$(webAppName)-staging'
        package: '$(Pipeline.Workspace)/nodeci/drop/$(Build.BuildId).zip'
        deployToSlotOrASE: true
        resourceGroupName: '$(resourceGroup)'
        slotName: 'staging'

    - task: AzureAppServiceManage@0
      inputs:
        azureSubscription: 'Azure Pass Azure Subscription'
        Action: 'Start Azure App Service'
        WebAppName: '$(webAppName)'
        SpecifySlot: true
        ResourceGroupName: '$(resourceGroup)'
        Slot: 'staging'

    - task: AzureMonitor@1
      inputs:
        azureSubscription: 'Azure Pass Azure Subscription'
        ResourceGroupName: '$(resourceGroup)'
        ResourceType: 'Microsoft.Web/sites'
        ResourceName: '$(webAppName)'
        AlertRules: |
          [
            {
              "alertName": "HTTP 5xx Errors",
              "metric": "Http5xx",
              "operator": "GreaterThan",
              "threshold": "0",
              "timeAggregation": "Count",
              "actionGroupId": "/subscriptions/$(subscriptionId)/resourceGroups/$(resourceGroup)/providers/microsoft.insights/actionGroups/emailalert"
            }
          ]

- stage: Production
  dependsOn: Staging
  jobs:
  - deployment: Production
    environment: Production
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Azure Pass Azure Subscription'
              appName: '$(webAppName)'
              package: '$(Pipeline.Workspace)/nodeci/drop/$(Build.BuildId).zip'
              deployToSlotOrASE: false

          - task: AzureAppServiceSettings@1
            inputs:
              azureSubscription: 'Azure Pass Azure Subscription'
              appName: '$(webAppName)'
              resourceGroupName: '$(resourceGroup)'
              appSettings: |
                [
                  {
                    "name": "WEBSITE_NODE_DEFAULT_VERSION",
                    "value": "~18",
                    "slotSetting": false
                  },
                  {
                    "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                    "value": "$(appInsightsKey)",
                    "slotSetting": false
                  }
                ]
